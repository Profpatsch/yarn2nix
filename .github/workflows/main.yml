# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  nix-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - uses: cachix/install-nix-action@v16

    - uses: cachix/cachix-action@v10
      with:
        name: yarn2nix
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    # TODO: move into nix script
    - name: check cabal file up to date (run hpack)
      run: |
        nix-shell \
          -E 'with import ./nixpkgs-pinned.nix {}; mkShell { buildInputs = [ hpack execline ]; }' \
          --run '
            execline-cd yarn2nix hpack \
            && \
            execline-cd yarn-lock hpack \
            && \
            git diff --exit-code
          '

    # TODO: move into nix script
    - name: check nix files up to date (run cabal2nix)
      run: |
        nix-shell \
          -E 'with import ./nixpkgs-pinned.nix {}; mkShell { buildInputs = [ hpack execline cabal2nix ]; }' \
          --run '
            execline-cd yarn2nix redirfd -w 1 yarn2nix.nix cabal2nix . \
            && \
            execline-cd yarn-lock redirfd -w 1 yarn-lock.nix cabal2nix . \
            && \
            git diff --exit-code
          '

    # Runs a single command using the runners shell
    - name: Build nix-tests
      run: env NIX_PATH= nix-build yarn2nix/tests/nix-tests/default.nix
